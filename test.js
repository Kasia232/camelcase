import test from 'ava';
import fn, {constructor as ct} from './';

test('camelCase', t => {
	t.is(fn('foo'), 'foo');
	t.is(fn('foo-bar'), 'fooBar');
	t.is(fn('foo-bar-baz'), 'fooBarBaz');
	t.is(fn('foo--bar'), 'fooBar');
	t.is(fn('--foo-bar'), 'fooBar');
	t.is(fn('--foo--bar'), 'fooBar');
	t.is(fn('FOO-BAR'), 'fooBar');
	t.is(fn('-foo-bar-'), 'fooBar');
	t.is(fn('--foo--bar--'), 'fooBar');
	t.is(fn('foo.bar'), 'fooBar');
	t.is(fn('foo..bar'), 'fooBar');
	t.is(fn('..foo..bar..'), 'fooBar');
	t.is(fn('foo_bar'), 'fooBar');
	t.is(fn('__foo__bar__'), 'fooBar');
	t.is(fn('__foo__bar__'), 'fooBar');
	t.is(fn('foo bar'), 'fooBar');
	t.is(fn('  foo  bar  '), 'fooBar');
	t.is(fn('-'), '-');
	t.is(fn(' - '), '-');
	t.is(fn('fooBar'), 'fooBar');
	t.is(fn('fooBar-baz'), 'foobarBaz');
	t.is(fn('F'), 'f');
	t.is(fn('Foo'), 'foo');
	t.is(fn('FOO'), 'foo');
	t.is(ct('FOO'), 'Foo');
	t.is(fn('foo', 'bar'), 'fooBar');
	t.is(ct('foo', 'bar'), 'FooBar');
	t.is(fn('foo', '-bar'), 'fooBar');
	t.is(ct('foo', '-bar'), 'FooBar');
	t.is(fn('foo', '-bar', 'baz'), 'fooBarBaz');
	t.is(ct('foo', '-bar', 'baz'), 'FooBarBaz');
	t.is(fn('', ''), '');
	t.is(ct('', ''), '');
	t.is(fn('--'), '');
	t.is(fn(''), '');
	t.is(fn('--__--_--_'), '');
	t.is(fn('---_', '--', '', '-_- '), '');
	t.end();
});
